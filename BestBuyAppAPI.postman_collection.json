{
	"info": {
		"_postman_id": "0d8a3c32-aef7-4587-b98d-8bc88f46798c",
		"name": "BestBuyAppAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30627003"
	},
	"item": [
		{
			"name": "Get All Products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Limit default value is 10\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.limit).to.eql(10);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{Server}}:{{PortNumber}}/products",
					"protocol": "http",
					"host": [
						"{{Server}}"
					],
					"port": "{{PortNumber}}",
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get All Products With Query Parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify the number of products returned is 2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.length).to.eql(2);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{Server}}:{{PortNumber}}/products?$limit=2",
					"protocol": "http",
					"host": [
						"{{Server}}"
					],
					"port": "{{PortNumber}}",
					"path": [
						"products"
					],
					"query": [
						{
							"key": "$limit",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a Specific Product With Path Parameter",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check if the id of the product returned is 48530\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(48530);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{Server}}:{{PortNumber}}/products/48530",
					"protocol": "http",
					"host": [
						"{{Server}}"
					],
					"port": "{{PortNumber}}",
					"path": [
						"products",
						"48530"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {\r",
							"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"//Extracting product ID for the next tests\r",
							"var jsonData = pm.response.json();\r",
							"var productID = jsonData.id;\r",
							"pm.environment.set(\"product_id\", productID);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Samsung Mobile\",\r\n  \"type\": \"Mobile\",\r\n  \"price\": 1000,\r\n  \"shipping\": 10,\r\n  \"upc\": \"aswdf\",\r\n  \"description\": \"Best mobile right now\",\r\n  \"manufacturer\": \"Samsung\",\r\n  \"model\": \"A55\",\r\n  \"url\": \"string\",\r\n  \"image\": \"string\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{Server}}:{{PortNumber}}/products",
					"protocol": "http",
					"host": [
						"{{Server}}"
					],
					"port": "{{PortNumber}}",
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Added Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the product returned has the same ID of the product created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"product_id\"));\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{Server}}:{{PortNumber}}/products/{{product_id}}",
					"protocol": "http",
					"host": [
						"{{Server}}"
					],
					"port": "{{PortNumber}}",
					"path": [
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Product Using PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the product edited has the same ID of the product created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"product_id\"));\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Check that the name is Iphone\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Iphone\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check that the model is Iphone12\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.model).to.eql(\"Iphone12\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Iphone\",\r\n  \"type\": \"Mobile\",\r\n  \"price\": 1000,\r\n  \"shipping\": 10,\r\n  \"upc\": \"aswdf\",\r\n  \"description\": \"Best mobile right now\",\r\n  \"manufacturer\": \"Apple\",\r\n  \"model\": \"Iphone12\",\r\n  \"url\": \"string\",\r\n  \"image\": \"string\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{Server}}:{{PortNumber}}/products/{{product_id}}",
					"protocol": "http",
					"host": [
						"{{Server}}"
					],
					"port": "{{PortNumber}}",
					"path": [
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Edit Using PUT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the product returned has the same ID of the product created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"product_id\"));\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Check that the name of the product is Iphone\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Iphone\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check that the model of the product is Iphone12\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.model).to.eql(\"Iphone12\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{Server}}:{{PortNumber}}/products/{{product_id}}",
					"protocol": "http",
					"host": [
						"{{Server}}"
					],
					"port": "{{PortNumber}}",
					"path": [
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Edit Product Using PATCH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the product edited has the same ID of the product created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"product_id\"));\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Check that the name is Iphone 12 phone\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Iphone 12 phone\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Iphone 12 phone\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{Server}}:{{PortNumber}}/products/{{product_id}}",
					"protocol": "http",
					"host": [
						"{{Server}}"
					],
					"port": "{{PortNumber}}",
					"path": [
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Edit Using PATCH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the product returned has the same ID of the product created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"product_id\"));\r",
							"\r",
							"});\r",
							"\r",
							"pm.test(\"Check that the name is Iphone 12 phone\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Iphone 12 phone\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{Server}}:{{PortNumber}}/products/{{product_id}}",
					"protocol": "http",
					"host": [
						"{{Server}}"
					],
					"port": "{{PortNumber}}",
					"path": [
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Verify that the product deleted has the same ID of the product created\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(pm.environment.get(\"product_id\"));\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\": \"Iphone 12 phone\"\r\n  \r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{Server}}:{{PortNumber}}/products/{{product_id}}",
					"protocol": "http",
					"host": [
						"{{Server}}"
					],
					"port": "{{PortNumber}}",
					"path": [
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Verify Deletion",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Check response message is No record found for id '\" + pm.environment.get(\"product_id\") + \"'\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.message).to.eql(\"No record found for id '\" + pm.environment.get(\"product_id\") + \"'\");\r",
							";\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{Server}}:{{PortNumber}}/products/{{product_id}}",
					"protocol": "http",
					"host": [
						"{{Server}}"
					],
					"port": "{{PortNumber}}",
					"path": [
						"products",
						"{{product_id}}"
					]
				}
			},
			"response": []
		}
	]
}